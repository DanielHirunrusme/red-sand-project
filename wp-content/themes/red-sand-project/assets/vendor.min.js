!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("Barba",[],t):"object"==typeof exports?exports.Barba=t():e.Barba=t()}(this,function(){return function(e){function t(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return e[i].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="http://localhost:8080/dist",t(0)}([function(e,t,n){"function"!=typeof Promise&&(window.Promise=n(1));var i={version:"0.0.10",BaseTransition:n(4),BaseView:n(6),BaseCache:n(8),Dispatcher:n(7),HistoryManager:n(9),Pjax:n(10),Prefetch:n(13),Utils:n(5)};e.exports=i},function(e,t,n){(function(t){!function(n){function i(){}function o(e,t){return function(){e.apply(t,arguments)}}function r(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],h(e,this)}function s(e,t){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(t):(e._handled=!0,void d(function(){var e=1===i._state?t.onFulfilled:t.onRejected;if(null===e)return void(1===i._state?a:u)(t.promise,i._value);var n;try{n=e(i._value)}catch(i){return void u(t.promise,i)}a(t.promise,n)}))}function a(e,t){try{if(t===e)throw new TypeError("A promise cannot be resolved with itself.");if(t&&("object"==typeof t||"function"==typeof t)){var n=t.then;if(t instanceof r)return e._state=3,e._value=t,void c(e);if("function"==typeof n)return void h(o(n,t),e)}e._state=1,e._value=t,c(e)}catch(t){u(e,t)}}function u(e,t){e._state=2,e._value=t,c(e)}function c(e){2===e._state&&0===e._deferreds.length&&d(function(){e._handled||p(e._value)});for(var t=0,n=e._deferreds.length;n>t;t++)s(e,e._deferreds[t]);e._deferreds=null}function l(e,t,n){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.promise=n}function h(e,t){var n=!1;try{e(function(e){n||(n=!0,a(t,e))},function(e){n||(n=!0,u(t,e))})}catch(e){if(n)return;n=!0,u(t,e)}}var f=setTimeout,d="function"==typeof t&&t||function(e){f(e,0)},p=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)};r.prototype["catch"]=function(e){return this.then(null,e)},r.prototype.then=function(e,t){var n=new this.constructor(i);return s(this,new l(e,t,n)),n},r.all=function(e){var t=Array.prototype.slice.call(e);return new r(function(e,n){function i(e,r){try{if(r&&("object"==typeof r||"function"==typeof r)){var s=r.then;if("function"==typeof s)return void s.call(r,function(t){i(e,t)},n)}t[e]=r,0===--o&&a(t)}catch(a){n(a)}}if(0===t.length)return e([]);for(var o=t.length,r=0;r<t.length;r++)i(r,t[r])})},r.resolve=function(e){return e&&"object"==typeof e&&e.constructor===r?e:new r(function(t){t(e)})},r.reject=function(e){return new r(function(t,n){n(e)})},r.race=function(e){return new r(function(t,n){for(var i=0,o=e.length;o>i;i++)e[i].then(t,n)})},r._setImmediateFn=function(e){d=e},r._setUnhandledRejectionFn=function(e){p=e},"undefined"!=typeof e&&e.exports?e.exports=r:n.Promise||(n.Promise=r)}(this)}).call(t,n(2).setImmediate)},function(e,t,n){(function(e,i){function o(e,t){this._id=e,this._clearFn=t}var r=n(3).nextTick,s=Function.prototype.apply,a=Array.prototype.slice,u={},c=0;t.setTimeout=function(){return new o(s.call(setTimeout,window,arguments),clearTimeout)},t.setInterval=function(){return new o(s.call(setInterval,window,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(window,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},t.setImmediate="function"==typeof e?e:function(e){var n=c++,i=!(arguments.length<2)&&a.call(arguments,1);return u[n]=!0,r(function(){u[n]&&(i?e.apply(null,i):e.call(null),t.clearImmediate(n))}),n},t.clearImmediate="function"==typeof i?i:function(e){delete u[e]}}).call(t,n(2).setImmediate,n(2).clearImmediate)},function(e,t){function n(){c&&s&&(c=!1,s.length?u=s.concat(u):l=-1,u.length&&i())}function i(){if(!c){var e=setTimeout(n);c=!0;for(var t=u.length;t;){for(s=u,u=[];++l<t;)s&&s[l].run();l=-1,t=u.length}s=null,c=!1,clearTimeout(e)}}function o(e,t){this.fun=e,this.array=t}function r(){}var s,a=e.exports={},u=[],c=!1,l=-1;a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new o(e,t)),1!==u.length||c||setTimeout(i,0)},o.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=r,a.addListener=r,a.once=r,a.off=r,a.removeListener=r,a.removeAllListeners=r,a.emit=r,a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t,n){var i=n(5),o={oldContainer:void 0,newContainer:void 0,newContainerLoading:void 0,extend:function(e){return i.extend(this,e)},init:function(e,t){var n=this;return this.oldContainer=e,this._newContainerPromise=t,this.deferred=i.deferred(),this.newContainerReady=i.deferred(),this.newContainerLoading=this.newContainerReady.promise,this.start(),this._newContainerPromise.then(function(e){n.newContainer=e,n.newContainerReady.resolve()}),this.deferred.promise},done:function(){this.oldContainer.parentNode.removeChild(this.oldContainer),this.newContainer.style.visibility="visible",this.deferred.resolve()},start:function(){}};e.exports=o},function(e,t){var n={getCurrentUrl:function(){return window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search},cleanLink:function(e){return e.replace(/#.*/,"")},xhrTimeout:5e3,xhr:function(e){var t=this.deferred(),n=new XMLHttpRequest;return n.onreadystatechange=function(){return 4===n.readyState?200===n.status?t.resolve(n.responseText):t.reject(new Error("xhr: HTTP code is not 200")):void 0},n.ontimeout=function(){return t.reject(new Error("xhr: Timeout exceeded"))},n.open("GET",e),n.timeout=this.xhrTimeout,n.setRequestHeader("x-barba","yes"),n.send(),t.promise},extend:function(e,t){var n=Object.create(e);for(var i in t)t.hasOwnProperty(i)&&(n[i]=t[i]);return n},deferred:function(){return new function(){this.resolve=null,this.reject=null,this.promise=new Promise(function(e,t){this.resolve=e,this.reject=t}.bind(this))}},getPort:function(e){var t="undefined"!=typeof e?e:window.location.port,n=window.location.protocol;return""!=t?parseInt(t):"http:"===n?80:"https:"===n?443:void 0}};e.exports=n},function(e,t,n){var i=n(7),o=n(5),r={namespace:null,extend:function(e){return o.extend(this,e)},init:function(){var e=this;i.on("initStateChange",function(t,n){n&&n.namespace===e.namespace&&e.onLeave()}),i.on("newPageReady",function(t,n,i){e.container=i,t.namespace===e.namespace&&e.onEnter()}),i.on("transitionCompleted",function(t,n){t.namespace===e.namespace&&e.onEnterCompleted(),n&&n.namespace===e.namespace&&e.onLeaveCompleted()})},onEnter:function(){},onEnterCompleted:function(){},onLeave:function(){},onLeaveCompleted:function(){}};e.exports=r},function(e,t){var n={events:{},on:function(e,t){this.events[e]=this.events[e]||[],this.events[e].push(t)},off:function(e,t){e in this.events!=0&&this.events[e].splice(this.events[e].indexOf(t),1)},trigger:function(e){if(e in this.events!=0)for(var t=0;t<this.events[e].length;t++)this.events[e][t].apply(this,Array.prototype.slice.call(arguments,1))}};e.exports=n},function(e,t,n){var i=n(5),o={data:{},extend:function(e){return i.extend(this,e)},set:function(e,t){this.data[e]=t},get:function(e){return this.data[e]},reset:function(){this.data={}}};e.exports=o},function(e,t){var n={history:[],add:function(e,t){t||(t=void 0),this.history.push({url:e,namespace:t})},currentStatus:function(){return this.history[this.history.length-1]},prevStatus:function(){var e=this.history;return e.length<2?null:e[e.length-2]}};e.exports=n},function(e,t,n){var i=n(5),o=n(7),r=n(11),s=n(8),a=n(9),u=n(12),c={Dom:u,History:a,Cache:s,cacheEnabled:!0,transitionProgress:!1,ignoreClassLink:"no-barba",start:function(){this.init()},init:function(){var e=this.Dom.getContainer(),t=this.Dom.getWrapper();t.setAttribute("aria-live","polite"),this.History.add(this.getCurrentUrl(),this.Dom.getNamespace(e)),o.trigger("initStateChange",this.History.currentStatus()),o.trigger("newPageReady",this.History.currentStatus(),{},e),o.trigger("transitionCompleted",this.History.currentStatus()),this.bindEvents()},bindEvents:function(){document.addEventListener("click",this.onLinkClick.bind(this)),window.addEventListener("popstate",this.onStateChange.bind(this))},getCurrentUrl:function(){return i.cleanLink(i.getCurrentUrl())},goTo:function(e){window.history.pushState(null,null,e),this.onStateChange()},forceGoTo:function(e){window.location=e},load:function(e){var t,n=i.deferred(),o=this;return t=this.Cache.get(e),t||(t=i.xhr(e),this.Cache.set(e,t)),t.then(function(e){var t=o.Dom.parseResponse(e);o.Dom.putContainer(t),o.cacheEnabled||o.Cache.reset(),n.resolve(t)},function(){o.forceGoTo(e),n.reject()}),n.promise},onLinkClick:function(e){for(var t=e.target;t&&!t.href;)t=t.parentNode;this.preventCheck(e,t)&&(e.stopPropagation(),e.preventDefault(),o.trigger("linkClicked",t),this.goTo(t.href))},preventCheck:function(e,t){return!!(window.history.pushState&&t&&t.href)&&(!(e.which>1||e.metaKey||e.ctrlKey||e.shiftKey||e.altKey)&&((!t.target||"_blank"!==t.target)&&(window.location.protocol===t.protocol&&window.location.hostname===t.hostname&&(i.getPort()===i.getPort(t.port)&&(!(t.href.indexOf("#")>-1)&&(i.cleanLink(t.href)!=i.cleanLink(location.href)&&!t.classList.contains(this.ignoreClassLink)))))))},getTransition:function(){return r},onStateChange:function(){var e=this.getCurrentUrl();if(this.transitionProgress&&this.forceGoTo(e),this.History.currentStatus().url===e)return!1;this.History.add(e);var t=this.load(e),n=Object.create(this.getTransition());this.transitionProgress=!0,o.trigger("initStateChange",this.History.currentStatus(),this.History.prevStatus());var i=n.init(this.Dom.getContainer(),t);t.then(this.onNewContainerLoaded.bind(this)),i.then(this.onTransitionEnd.bind(this))},onNewContainerLoaded:function(e){var t=this.History.currentStatus();t.namespace=this.Dom.getNamespace(e),o.trigger("newPageReady",this.History.currentStatus(),this.History.prevStatus(),e)},onTransitionEnd:function(){this.transitionProgress=!1,o.trigger("transitionCompleted",this.History.currentStatus(),this.History.prevStatus())}};e.exports=c},function(e,t,n){var i=n(4),o=i.extend({start:function(){this.newContainerLoading.then(this.finish.bind(this))},finish:function(){document.body.scrollTop=0,this.done()}});e.exports=o},function(e,t){var n={dataNamespace:"namespace",wrapperId:"barba-wrapper",containerClass:"barba-container",parseResponse:function(e){var t=document.createElement("div");t.innerHTML=e;var n=t.querySelector("title");return n&&(document.title=n.textContent),this.getContainer(t)},getWrapper:function(){var e=document.getElementById(this.wrapperId);if(!e)throw new Error("Barba.js: wrapper not found!");return e},getContainer:function(e){if(e||(e=document.body),!e)throw new Error("Barba.js: DOM not ready!");var t=this.parseContainer(e);if(t&&t.jquery&&(t=t[0]),!t)throw new Error("Barba.js: no container found");return t},getNamespace:function(e){return e&&e.dataset?e.dataset[this.dataNamespace]:e?e.getAttribute("data-"+this.dataNamespace):null},putContainer:function(e){e.style.visibility="hidden";var t=this.getWrapper();t.appendChild(e)},parseContainer:function(e){return e.querySelector("."+this.containerClass)}};e.exports=n},function(e,t,n){var i=n(5),o=n(10),r={ignoreClassLink:"no-barba-prefetch",init:function(){return!!window.history.pushState&&(document.body.addEventListener("mouseover",this.onLinkEnter.bind(this)),void document.body.addEventListener("touchstart",this.onLinkEnter.bind(this)))},onLinkEnter:function(e){for(var t=e.target;t&&!t.href;)t=t.parentNode;if(t&&!t.classList.contains(this.ignoreClassLink)){var n=t.href;if(o.preventCheck(e,t)&&!o.Cache.get(n)){var r=i.xhr(n);o.Cache.set(n,r)}}}};e.exports=r}])}),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e:e(jQuery)}(function(e){function t(t){var s=t||window.event,a=u.call(arguments,1),c=0,h=0,f=0,d=0,p=0,v=0;if(t=e.event.fix(s),t.type="mousewheel","detail"in s&&(f=s.detail*-1),"wheelDelta"in s&&(f=s.wheelDelta),"wheelDeltaY"in s&&(f=s.wheelDeltaY),"wheelDeltaX"in s&&(h=s.wheelDeltaX*-1),"axis"in s&&s.axis===s.HORIZONTAL_AXIS&&(h=f*-1,f=0),c=0===f?h:f,"deltaY"in s&&(f=s.deltaY*-1,c=f),"deltaX"in s&&(h=s.deltaX,0===f&&(c=h*-1)),0!==f||0!==h){if(1===s.deltaMode){var m=e.data(this,"mousewheel-line-height");c*=m,f*=m,h*=m}else if(2===s.deltaMode){var g=e.data(this,"mousewheel-page-height");c*=g,f*=g,h*=g}if(d=Math.max(Math.abs(f),Math.abs(h)),(!r||d<r)&&(r=d,i(s,d)&&(r/=40)),i(s,d)&&(c/=40,h/=40,f/=40),c=Math[c>=1?"floor":"ceil"](c/r),h=Math[h>=1?"floor":"ceil"](h/r),f=Math[f>=1?"floor":"ceil"](f/r),l.settings.normalizeOffset&&this.getBoundingClientRect){var w=this.getBoundingClientRect();p=t.clientX-w.left,v=t.clientY-w.top}return t.deltaX=h,t.deltaY=f,t.deltaFactor=r,t.offsetX=p,t.offsetY=v,t.deltaMode=0,a.unshift(t,c,h,f),o&&clearTimeout(o),o=setTimeout(n,200),(e.event.dispatch||e.event.handle).apply(this,a)}}function n(){r=null}function i(e,t){return l.settings.adjustOldDeltas&&"mousewheel"===e.type&&t%120===0}var o,r,s=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],a="onwheel"in document||document.documentMode>=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],u=Array.prototype.slice;if(e.event.fixHooks)for(var c=s.length;c;)e.event.fixHooks[s[--c]]=e.event.mouseHooks;var l=e.event.special.mousewheel={version:"3.1.12",setup:function(){if(this.addEventListener)for(var n=a.length;n;)this.addEventListener(a[--n],t,!1);else this.onmousewheel=t;e.data(this,"mousewheel-line-height",l.getLineHeight(this)),e.data(this,"mousewheel-page-height",l.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var n=a.length;n;)this.removeEventListener(a[--n],t,!1);else this.onmousewheel=null;e.removeData(this,"mousewheel-line-height"),e.removeData(this,"mousewheel-page-height")},getLineHeight:function(t){var n=e(t),i=n["offsetParent"in e.fn?"offsetParent":"parent"]();return i.length||(i=e("body")),parseInt(i.css("fontSize"),10)||parseInt(n.css("fontSize"),10)||16},getPageHeight:function(t){return e(t).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};e.fn.extend({mousewheel:function(e){return e?this.bind("mousewheel",e):this.trigger("mousewheel")},unmousewheel:function(e){return this.unbind("mousewheel",e)}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
